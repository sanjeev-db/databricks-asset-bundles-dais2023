name: Deploy to QA

concurrency: 1

on:
  workflow_dispatch:

  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - main
    paths:
      - "**/*.yml"
      - "**/*.py"

jobs:
  deploy:
    name: "Deploy bundle"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: databricks/setup-cli@main
      
      - run: curl --location 'https://adb-2701504584282370.10.azuredatabricks.net/api/2.0/dbfs/put' \
--header 'Content-Type: text/plain' \
--header 'Authorization: Bearer dapi6fb63c3d7659275e831613df52ac11ac' \
--data '{
  "path": "/dbfs/FileStore/users/dlt_config1.json",
  "contents": "test",
  "overwrite": "true"
}'
      - run: databricks bundle deploy
        env:
          ##DATABRICKS_TOKEN: ${{ secrets.E2_DEMO_WEST_TOKEN }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_BUNDLE_ENV: qa

  ##pipeline_update:
  ##  name: "Run pipeline update"
  ##  runs-on: ubuntu-latest

  ##  needs:
  ##    - deploy

  ##  steps:
  ##    - uses: actions/checkout@v3

#       - uses: actions/setup-python@v4
#         with:
#           python-version: 3.11
#           cache: 'pip'

#       - run: pip install -r requirements.txt
#         working-directory: .github/support

  ##    - uses: databricks/setup-cli@main

  ##    - shell: bash
  ##      name: Run pipeline update
  ##      run: |
  ##        set -o pipefail
  ##        databricks bundle run fe_medium_metrics --refresh-all 2>&1 | tee output.log
  ##      env:
  ##        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
  ##        DATABRICKS_BUNDLE_ENV: qa

#       - shell: bash
#         if: always()
#         name: Emit annotations
#         run: |
#           pipeline_id=$(head -1 output.log | awk -F / '{print $6}')
#           update_id=$(head -1 output.log | awk -F / '{print $8}')
#           PYTHONPATH=$PWD:$PWD/.github/support python3 .github/support/emit_annotations.py $pipeline_id $update_id
#         env:
#           DATABRICKS_TOKEN: ${{ secrets.E2_DEMO_WEST_TOKEN }}
